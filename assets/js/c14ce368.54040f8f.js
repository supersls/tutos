"use strict";(self.webpackChunktutos=self.webpackChunktutos||[]).push([[9826],{4826:(r,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var t=n(4848),o=n(8453);const i={},a=void 0,c={id:"spring/spring-data-jdbc",title:"spring-data-jdbc",description:"Certainly! Below is a basic example of using Spring Data JDBC, formatted in Markdown:",source:"@site/docs/spring/spring-data-jdbc.md",sourceDirName:"spring",slug:"/spring/spring-data-jdbc",permalink:"/tutos/docs/spring/spring-data-jdbc",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/spring/spring-data-jdbc.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Spring",permalink:"/tutos/docs/category/spring"},next:{title:"spring-data-jpa",permalink:"/tutos/docs/spring/spring-data-jpa"}},s={},d=[{value:"Repository Interface: ProductRepository",id:"repository-interface-productrepository",level:4},{value:"Service Class: ProductService",id:"service-class-productservice",level:4},{value:"Controller Class: ProductController",id:"controller-class-productcontroller",level:4}];function p(r){const e={code:"code",h4:"h4",p:"p",pre:"pre",...(0,o.R)(),...r.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:"Certainly! Below is a basic example of using Spring Data JDBC, formatted in Markdown:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'### Spring Data JDBC Example\n\n#### Entity Class: Product\n\n```java\nimport org.springframework.data.annotation.Id;\nimport org.springframework.data.relational.core.mapping.Table;\n\n@Table("products")\npublic class Product {\n    @Id\n    private Long id;\n    private String name;\n    private double price;\n\n    // Constructors, getters, and setters\n}\n'})}),"\n",(0,t.jsx)(e.h4,{id:"repository-interface-productrepository",children:"Repository Interface: ProductRepository"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'import org.springframework.data.jdbc.repository.query.Query;\nimport org.springframework.data.repository.CrudRepository;\n\npublic interface ProductRepository extends CrudRepository<Product, Long> {\n    @Query("SELECT * FROM products WHERE price < :maxPrice")\n    List<Product> findProductsCheaperThan(double maxPrice);\n}\n'})}),"\n",(0,t.jsx)(e.h4,{id:"service-class-productservice",children:"Service Class: ProductService"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:"import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport java.util.List;\n\n@Service\npublic class ProductService {\n    private final ProductRepository productRepository;\n\n    @Autowired\n    public ProductService(ProductRepository productRepository) {\n        this.productRepository = productRepository;\n    }\n\n    public List<Product> findProductsCheaperThan(double maxPrice) {\n        return productRepository.findProductsCheaperThan(maxPrice);\n    }\n\n    // Other service methods\n}\n"})}),"\n",(0,t.jsx)(e.h4,{id:"controller-class-productcontroller",children:"Controller Class: ProductController"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.*;\n\n@RestController\n@RequestMapping("/products")\npublic class ProductController {\n    private final ProductService productService;\n\n    @Autowired\n    public ProductController(ProductService productService) {\n        this.productService = productService;\n    }\n\n    @GetMapping("/cheaper-than/{maxPrice}")\n    public List<Product> findProductsCheaperThan(@PathVariable double maxPrice) {\n        return productService.findProductsCheaperThan(maxPrice);\n    }\n\n    // Other controller methods\n}\n'})}),"\n",(0,t.jsxs)(e.p,{children:["In this example, we have an entity class ",(0,t.jsx)(e.code,{children:"Product"}),", a repository interface ",(0,t.jsx)(e.code,{children:"ProductRepository"}),", a service class ",(0,t.jsx)(e.code,{children:"ProductService"}),", and a controller class ",(0,t.jsx)(e.code,{children:"ProductController"})," using Spring Data JDBC to manage ",(0,t.jsx)(e.code,{children:"Product"})," entities."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"\nThis Markdown document explains the basic components of a Spring Data JDBC application, including entity definition, repository interface, service, and controller layers.\n"})})]})}function l(r={}){const{wrapper:e}={...(0,o.R)(),...r.components};return e?(0,t.jsx)(e,{...r,children:(0,t.jsx)(p,{...r})}):p(r)}},8453:(r,e,n)=>{n.d(e,{R:()=>a,x:()=>c});var t=n(6540);const o={},i=t.createContext(o);function a(r){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof r?r(e):{...e,...r}}),[e,r])}function c(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(o):r.components||o:a(r.components),t.createElement(i.Provider,{value:e},r.children)}}}]);